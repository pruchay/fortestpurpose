import React, { useEffect } from 'react';
import { useAuth0 } from '@auth0/auth0-react';
import { useHistory } from 'react-router-dom';

const CallbackHandler = () => {
    console.log('üü¢ CallbackHandler –∑–º–æ–Ω—Ç–æ–≤–∞–Ω–æ');
    const { getAccessTokenSilently, user, isAuthenticated } = useAuth0();
    const history = useHistory();

    useEffect(() => {
        const handleAuth = async () => {
            // try {
                console.log('üöÄ Init handleAuth...');

                console.log('window location', window.location.href)

                history.push('/');

            //     if (isAuthenticated) {
            //         console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π');
            //
            //         const token = await getAccessTokenSilently();
            //         console.log('üéâ –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–∫–µ–Ω –≤—ñ–¥ Auth0:', token);
            //
            //         // ‚úÖ –õ–æ–≥ –ø–µ—Ä–µ–¥ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è–º
            //         console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ postMessage —É Web Component', {
            //             type: 'WEB_COMPONENT_AUTH',
            //             payload: {
            //                 id_token: token,
            //                 user,
            //             },
            //         });
            //
            //         // ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–æ–∫–µ–Ω–∏ —É Web Component —á–µ—Ä–µ–∑ postMessage
            //         window.postMessage(
            //             {
            //                 type: 'WEB_COMPONENT_AUTH',
            //                 payload: {
            //                     id_token: token,
            //                     user,
            //                 },
            //             },
            //             '*'
            //         );
            //
            //         console.log('‚úÖ postMessage –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ');
            //
            //         // ‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            //         history.push('/');
            //     } else {
            //         console.log('‚ö†Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–µ –Ω–µ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π');
            //     }
            // } catch (err) {
            //     console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞:', err);
            //     history.push('/');
            // }
        };

        handleAuth();
    }, [getAccessTokenSilently, isAuthenticated, user, history]);

    return <div>Authorisation... Please wait</div>;
};

export default CallbackHandler;